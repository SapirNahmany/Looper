{"version":3,"sources":["logo.svg","loopSamples/120_future_funk_beats_25.mp3","loopSamples/120_stutter_breakbeats_16.mp3","loopSamples/Bass Warwick heavy funk groove on E 120 BPM.mp3","loopSamples/electric guitar coutry slide 120bpm - B.mp3","loopSamples/FUD_120_StompySlosh.mp3","loopSamples/GrooveB_120bpm_Tanggu.mp3","loopSamples/MazePolitics_120_Perc.mp3","loopSamples/PAS3GROOVE1.03B.mp3","loopSamples/SilentStar_120_Em_OrganSynth.mp3","LooperManager/index.js","components/Pad/index.js","components/PlayButton/index.js","components/StopButton/index.js","components/Board/index.js","App.js","reportWebVitals.js","index.js"],"names":["loopSamples","title","audio","Audio","futureFunkBeats25","isPlaying","stutter_breakbeats_16","bass_warwick","electric_guitar","fUD_120_StompySlosh","grooveB_120bpm_Tanggu","mazePolitics_120_Perc","pAS3GROOVE1","silentStar_120_Em_OrganSynth","isSomeSamplePlaying","samplesData","Object","values","some","startSample","forEach","stopAudio","play","pause","currentTime","window","x","Pad","id","setIsPlaying","className","onClick","PlayButton","StopButton","props","onClickStopHandler","Board","loopSamplesDataRef","useRef","intervalIdRef","useState","LooperManager","loopSamplesData","setLoopSamplesData","console","log","currentLoopSamplesData","updatedLoopSamplesData","entries","reduce","result","sampleId","sample","current","setInterval","clearInterval","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e3330f71.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","import futureFunkBeats25 from '../loopSamples/120_future_funk_beats_25.mp3';\r\nimport stutter_breakbeats_16 from '../loopSamples/120_stutter_breakbeats_16.mp3';\r\nimport bass_warwick from '../loopSamples/Bass Warwick heavy funk groove on E 120 BPM.mp3';\r\nimport electric_guitar from '../loopSamples/electric guitar coutry slide 120bpm - B.mp3';\r\nimport fUD_120_StompySlosh from '../loopSamples/FUD_120_StompySlosh.mp3';\r\nimport grooveB_120bpm_Tanggu from '../loopSamples/GrooveB_120bpm_Tanggu.mp3';\r\nimport mazePolitics_120_Perc from '../loopSamples/MazePolitics_120_Perc.mp3';\r\nimport pAS3GROOVE1 from '../loopSamples/PAS3GROOVE1.03B.mp3';\r\nimport silentStar_120_Em_OrganSynth from '../loopSamples/SilentStar_120_Em_OrganSynth.mp3';\r\n\r\nexport const loopSamples = {\r\n    1: {\r\n        title: '120_future_funk_beats_25',\r\n        audio: new Audio(futureFunkBeats25),\r\n        isPlaying: false\r\n    },\r\n    2:{\r\n        title: '120_stutter_breakbeats_16',\r\n        audio: new Audio(stutter_breakbeats_16),\r\n        isPlaying: false\r\n    },\r\n    3:{\r\n    \r\n        title: 'Bass Warwick heavy funk groove on E 120 BPM',\r\n        audio: new Audio(bass_warwick),\r\n        isPlaying: false\r\n    },\r\n    4:{\r\n        title: 'electric guitar coutry slide 120bpm - B',\r\n        audio: new Audio(electric_guitar),\r\n        isPlaying: false\r\n    },\r\n    5:{\r\n        title: 'FUD_120_StompySlosh',\r\n        audio: new Audio(fUD_120_StompySlosh),\r\n        isPlaying: false\r\n    },\r\n    6:{\r\n        title: 'GrooveB_120bpm_Tanggu',\r\n        audio: new Audio(grooveB_120bpm_Tanggu),\r\n        isPlaying: false\r\n    },\r\n    7:{\r\n        title: 'MazePolitics_120_Perc',\r\n        audio: new Audio(mazePolitics_120_Perc),\r\n        isPlaying: false\r\n    },\r\n    8:{\r\n        title: 'PAS3GROOVE1.03B',\r\n        audio: new Audio(pAS3GROOVE1),\r\n        isPlaying: false\r\n    },\r\n    9:{\r\n        title: 'SilentStar_120_Em_OrganSynth',\r\n        audio: new Audio(silentStar_120_Em_OrganSynth),\r\n        isPlaying: false\r\n    }\r\n};\r\nwindow.x  = loopSamples;\r\n    \r\nexport function setIsPlaying(loopSamples, id, isPlaying){\r\n    return Object.entries(loopSamples).reduce((result, [sampleId, sample])=> {\r\n        if(id === sampleId){\r\n            return {\r\n                ...result, \r\n                [sampleId] : {\r\n                    ...sample, \r\n                    isPlaying\r\n                }\r\n            };\r\n        };\r\n\r\n        return {\r\n            ...result, \r\n            [sampleId] : sample\r\n        };\r\n    }, {});\r\n}\r\n\r\nexport function isSomeSamplePlaying(samplesData) {\r\n    return Object.values(samplesData).some(({isPlaying}) =>  isPlaying);\r\n}\r\n\r\nexport function startSample(samplesData){\r\n    Object.values(samplesData).forEach(({isPlaying, audio})=>{\r\n        if(isPlaying){\r\n            stopAudio(audio);\r\n        // //             audio.currentTime = 0;\r\n\r\n            audio.play();\r\n\r\n            // if (audio.paused) {\r\n            //     audio.play();\r\n            // }else{\r\n            //     audio.currentTime = 0\r\n            // }\r\n        }\r\n    });\r\n}\r\n\r\nexport function stopAudio(audio){\r\n    audio.pause();\r\n    audio.currentTime = 0;\r\n}\r\n\r\n","import React, {useState} from 'react';\r\nimport { loopSamples } from '../../LooperManager';\r\nimport './styles.css'\r\n\r\nfunction Pad({id, title, isPlaying, setIsPlaying}) {\r\n\r\n    const clickHandler = () =>{\r\n        setIsPlaying(id, !isPlaying);\r\n    };\r\n\r\n    return(\r\n\r\n        <div className={`pad${isPlaying? '-change': ''}`}>\r\n            <button onClick={clickHandler}>\r\n            <h2>{id}</h2>\r\n            <h4>{title}</h4>\r\n            <h3>{isPlaying ? 'Pause': 'Play'}</h3>\r\n               </button>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Pad;\r\n","import './styles.css'\r\n\r\nfunction PlayButton() {\r\n\r\n    const check='checkPlayButton'\r\n\r\n    return(\r\n        \r\n        <div className = \"play-button\">\r\n            <button> \r\n            <h1>PLAY</h1>\r\n            </button>  \r\n        </div>\r\n        \r\n\r\n    );\r\n}\r\n\r\nexport default PlayButton;\r\n","import './styles.css'\r\n\r\nfunction StopButton(props) {\r\n\r\n    return(\r\n\r\n        <div className = \"stop-button\">\r\n            <button onClick={props.onClickStopHandler}>\r\n            <h1>STOP</h1>\r\n            </button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default StopButton;\r\n","import React, { useState, useRef } from 'react';\r\nimport * as LooperManager from '../../LooperManager';\r\nimport Pad from '../Pad';\r\nimport PlayButton from '../PlayButton';\r\nimport StopButton from '../StopButton';\r\nimport './styles.css'\r\n\r\nconst SAMPLE_LENGHT_MS = 8*1000 + 100;\r\n\r\nfunction Board() {\r\n\r\n    const loopSamplesDataRef = useRef();\r\n    const intervalIdRef = useRef();\r\n    const [loopSamplesData, setLoopSamplesData] = useState(LooperManager.loopSamples);\r\n    console.log('board render')\r\n    \r\n    const setIsPlaying = function(id, isPlaying) {   \r\n        console.log('in Board: pad ',id, 'was cliked. value of isPlaying: ', isPlaying)\r\n        setLoopSamplesData((currentLoopSamplesData)=> {\r\n            let updatedLoopSamplesData = LooperManager.setIsPlaying(currentLoopSamplesData, id, isPlaying); //update loopSamples hash map\r\n            if(isPlaying){\r\n                const isSomeSamplePlaying = LooperManager.isSomeSamplePlaying(currentLoopSamplesData);\r\n                if(!isSomeSamplePlaying){\r\n                    //sample[id] is the first one to play. \r\n                    LooperManager.startSample(updatedLoopSamplesData);\r\n                    \r\n                    intervalIdRef.current = setInterval(()=> {\r\n                        LooperManager.startSample(loopSamplesDataRef.current);                    \r\n                    }, SAMPLE_LENGHT_MS);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                LooperManager.stopAudio(updatedLoopSamplesData[id].audio);\r\n                const isOtherSamplePlaying = LooperManager.isSomeSamplePlaying(updatedLoopSamplesData);\r\n\r\n                if(!isOtherSamplePlaying){\r\n                    // no one is playing. cancel interval\r\n                    clearInterval(intervalIdRef.current)\r\n                }\r\n            }\r\n            loopSamplesDataRef.current = updatedLoopSamplesData;\r\n            return updatedLoopSamplesData;\r\n        });\r\n        console.log(loopSamplesData)\r\n    }\r\n    const onClickStopHandler = function(){\r\n        console.log(\"Stop button was cliked\");\r\n    }\r\n    /*\r\n    useEffect(()=>{\r\n    }, [])\r\n    */\r\n    return(\r\n\r\n        <div className = \"board-style\">\r\n                <PlayButton></PlayButton>\r\n                <StopButton onClickStopHandler={onClickStopHandler}></StopButton>\r\n\r\n            {\r\n                Object.entries(loopSamplesData).map(([id, sample]) => <Pad id={id} {...sample} setIsPlaying={setIsPlaying}/>)\r\n            }\r\n           \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Board;\r\n","import logo from './logo.svg';\nimport './App.css';\n//import Pads from './components/Pads';\nimport Board from './components/Board';\n//import Music from './components/Music';\n\n//const [playInLoop, setPlayInLoop] = useState(false);\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Looper</h1>\n      <Board></Board>\n\n  \n    </div>\n  );\n}\n\nexport default App;\n\n/*\n<header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n*/","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}